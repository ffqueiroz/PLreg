cbind(t(Jbeta.lambda), t(Jtau.lambda), Jlambda.lambda))
J
}
J0function    <- function(beta, tau){
eta.1 <- as.vector(X %*% beta)
eta.2 <- as.vector(S %*% tau)
mu     <- linkinv(eta.1)
sigma  <- sigma_linkinv(eta.2)
d1dot  <- as.vector( 1/mu.eta(eta.1) )
dd1dot <- as.vector( - dmu.deta(eta.1)*d1dot^3 )
d2dot  <- as.vector(1/sigma_mu.eta(eta.2))
dd2dot <- as.vector(-sigma_dmu.deta(eta.2)*d2dot^3)
z <- (-1/sigma)*(log(log(y)/log(mu)))
vdv <- v.function(mu, sigma, lambda)
v   <- vdv$v
dv  <- vdv$dv
mu_star     <- as.vector(-1/(sigma*mu*log(mu)))
sigma_star  <- as.vector((z^2*v - 1)/sigma)
w1 <- - (mu_star^2)*(sigma*(log(mu) + 1)*z*v - v - z*dv)*(1/d1dot) + mu_star*z*v*dd1dot/d1dot^2
w2 <- - ((1/sigma^2) - (z^2/sigma^2)*(3*v + z*dv))*(1/d2dot) + sigma_star*(dd2dot/d2dot^2)
w3 <-  (mu_star/sigma)*z*(2*v + z*dv)
T1 <- diag(1/d1dot)
T2 <- diag(1/d2dot)
W1 <- diag(as.vector(w1))
W2 <- diag(as.vector(w2))
W3 <- diag(as.vector(w3))
Jbeta.beta     <- t(X)%*%W1%*%T1%*%X
Jtau.tau       <- t(S)%*%W2%*%T2%*%S
Jbeta.tau      <- t(X)%*%W3%*%T1%*%T2%*%S
J <- rbind(cbind(Jbeta.beta, Jbeta.tau),
cbind(t(Jbeta.tau), Jtau.tau))
J
}
gama.opt  <- tryCatch(optim( c(0), logLp, method = method, control = control), error=function(e) {e})
fixed.opt <- tryCatch(optim(start[seq.int(length.out = p + q)], logLfixed, gr = Ufixed,
method = method, lambda = exp(gama.opt$par), control = control), error=function(e) {e})
gama.opt
fixed.opt
gama.opt
theta.opt <- optim(par = c(start,0), fn = logL, gr = U, method = method, control = control)
lambda <- exp(gama.opt$par)
beta   <- fixed.opt$par[seq.int(length.out = p)]
tau    <- fixed.opt$par[seq.int(length.out = q) + p]
lambda
Jfunction(beta, tau, lambda)
solve(Jfunction(beta, tau, lambda))
theta.opt <- optim(par = c(start,0), fn = logL, method = method, control = control,
hessian = TRUE)
beta   <- theta.opt$par[seq.int(length.out = p)]
tau    <- theta.opt$par[seq.int(length.out = q) + p]
lambda <- exp(theta.opt$par[seq.int(length.out = 1) + p + q])
lambda
theta.opt <- optim(par = c(start,0), fn = logL, method = method, control = control,
hessian = TRUE)
theta.opt
beta   <- theta.opt$par[seq.int(length.out = p)]
tau    <- theta.opt$par[seq.int(length.out = q) + p]
lambda <- exp(theta.opt$par[seq.int(length.out = 1) + p + q])
solve(Jfunction(beta, tau, lambda))
family = "TF"
zeta = 3
theta.opt <- optim(par = c(start,0), fn = logL, method = method, control = control,
hessian = TRUE)
beta   <- theta.opt$par[seq.int(length.out = p)]
tau    <- theta.opt$par[seq.int(length.out = q) + p]
lambda <- exp(theta.opt$par[seq.int(length.out = 1) + p + q])
lambda
Jfunction(beta, tau, lambda)
theta.opt$hessian
eta.1 <- as.vector(X %*% beta)
eta.2 <- as.vector(S %*% tau)
mu     <- linkinv(eta.1)
sigma  <- sigma_linkinv(eta.2)
mu
sigma
d1dot  <- as.vector( 1/mu.eta(eta.1) )
dd1dot <- as.vector( - dmu.deta(eta.1)*d1dot^3 )
d2dot  <- as.vector(1/sigma_mu.eta(eta.2))
dd2dot <- as.vector(-sigma_dmu.deta(eta.2)*d2dot^3)
z <- (1/sigma)*(VGAM::logitlink(y^lambda) - VGAM::logitlink(mu^lambda))
vdv <- v.function(mu, sigma, lambda)
v   <- vdv$v
dv  <- vdv$dv
v
mu_star     <- as.vector(lambda/(sigma*mu*(1 - mu^lambda)))
sigma_star  <- as.vector((z^2*v - 1)/sigma)
lambda_star <- as.vector((1/lambda) + ((y^lambda)*(log(y))/(1-y^lambda)) -
z*v*(1/sigma)*((log(y)/(1 - y^lambda)) -
(log(mu)/(1 - mu^lambda))))
mu_star
lambda_star
sigma_star
w1 <- (mu_star^2/lambda)*(sigma*(1 - (mu^lambda)*(1 + lambda))*z*v +
+ lambda*(v + z*dv))*(1/d1dot) +
+ mu_star*z*v*dd1dot/d1dot^2
w2 <- -((1/sigma^2) - (z^2/sigma^2)*(3*v + z*dv))*(1/d2dot) +
+ sigma_star*(dd2dot/d2dot^2)
w3 <- 1/lambda^2 - ((y^lambda)*((log(y))^2)/((1 - y^lambda)^2)) +
+ (1/sigma^2)*(v + z*dv)*((log(y)/(1 - y^lambda)) -
(log(mu)/(1 - mu^lambda)))^2 +
(1/sigma)*z*v*((((y^lambda)*(log(y)^2))/(1 - y^lambda)^2) -
(((mu^lambda)*(log(mu)^2))/(1 - mu^lambda)^2))
w4 <- (mu_star/sigma)*z*(2*v + z*dv)
w5 <- -mu_star*(((1 - (mu^lambda)*(1 - lambda*log(mu)))/(lambda*(1 - mu^lambda)))*z*v +
+ (1/sigma)*((log(y)/(1 - y^lambda)) -
(log(mu)/(1 - mu^lambda)))*(v + z*dv))
w6 <- ( - 1/sigma^2)*((log(y)/(1 - y^lambda)) - (log(mu)/(1 - mu^lambda)))*z*(2*v + z*dv)
T1 <- diag(1/d1dot)
T2 <- diag(1/d2dot)
W1 <- diag(as.vector(w1))
W2 <- diag(as.vector(w2))
W3 <- diag(as.vector(w3))
W4 <- diag(as.vector(w4))
W5 <- diag(as.vector(w5))
W6 <- diag(as.vector(w6))
Jbeta.beta     <- t(X)%*%W1%*%T1%*%X
Jtau.tau       <- t(S)%*%W2%*%T2%*%S
Jlambda.lambda <- t(rep.int(1, n))%*%W3%*%rep.int(1, n)
Jbeta.tau      <- t(X)%*%W4%*%T1%*%T2%*%S
Jbeta.lambda   <- t(X)%*%W5%*%T1%*%rep.int(1, n)
Jtau.lambda    <- t(S)%*%W6%*%T1%*%rep.int(1, n)
Jtau.lambda
Jbeta.lambda
Jtau.tau
fit_cancer <- PLreg(y ~ sexo + raca_NHB + raca_NHP | sexo + raca_NHB + raca_NHP, data = data,
family = "NO", zeta = 3, control = PLreg.control(lambda = 0))
summary(fit_cancer)
dim(data)
fit_cancer <- PLreg(y ~ sexo + raca_NHB + raca_NHP | sexo + raca_NHB + raca_NHP, data = data,
family = "NO", zeta = 3, control = PLreg.control(lambda = 0), link = "loglog")
summary(fit_cancer)
fit_cancer <- PLreg(y ~ sexo + raca_NHB + raca_NHP | sexo + raca_NHB + raca_NHP, data = data,
family = "NO", zeta = 3, control = PLreg.control(lambda = 1), link = "loglog")
summary(fit_cancer)
devtools::load_all()
usethis::use_vignette("PLregvignette")
?plogis
?PLreg
devtools::load_all()
?pPL(c(0.4, 0.2), 0.2, 1, 1, family = "SLASH")
pPL(c(0.4, 0.2), 0.2, 1, 1, family = "SLASH")
devtools::load_all()
pPL(c(0.4, 0.2), 0.2, 1, 1, family = "SLASH")
pPL(c(0.4, 0.2), 0.2, 1, 1, family = "SLASH")
devtools::load_all()
pPL(c(0.4, 0.2), 0.2, 1, 1, family = "LOI")
pPL(c(0.4, 0.2), 0.2, 1, 1, family = "LOII")
pPL(c(0.4, 0.2, 1), 0.2, 1, 1, family = "LOII")
pPL(c(0.4, 0.2, 10), 0.2, 1, 1, family = "LOII")
pPL(c(0.4, 0.2, 10), 0.2, 1, 1, family = "NO")
pbeta(2, 1, 1)
?pbeta
?plogis
devtools::load_all()
# Construindo o pacote
devtools::build()
?PL
devtools::load_all()
?PL
mu = 0.3; sigma = 1; lambda = 2
set.seed(1)
y = rPL(1000, mu, sigma, lambda, family = "SN",  zeta = 2.5)
hist(y, prob = TRUE, breaks = 15, main = "", las = 1, xlab = "y", ylim = c(0, 4.5))
curve(dPL(x, mu, sigma, lambda, family = "SN",  zeta = 2.5),
from = 0.01, to = 0.8, add = TRUE, col = "red")
rug(y)
mu = 0.3; sigma = 1; lambda = 2
set.seed(1)
y = rPL(1000, mu, sigma, lambda, family = "SN",  zeta = 2.5)
hist(y, prob = TRUE, breaks = 15, main = "", las = 1, xlab = "y", ylim = c(0, 4.5))
curve(dPL(x, mu, sigma, lambda, family = "SN",  zeta = 2.5),
from = 0.01, to = 0.8, add = TRUE, col = "red")
rug(y)
mu = 0.3; sigma = 1; lambda = 2
set.seed(1)
y = rPL(1000, mu, sigma, lambda, family = "SN",  zeta = 2.5)
hist(y, prob = TRUE, breaks = 15, main = "", las = 1, xlab = "y", ylim = c(0, 4.5), ylab = "Densidade")
curve(dPL(x, mu, sigma, lambda, family = "SN",  zeta = 2.5),
from = 0.01, to = 0.8, add = TRUE, col = "red")
rug(y)
mu = 0.3; sigma = 1; lambda = 2
set.seed(1)
y = rPL(1000, mu, sigma, lambda, family = "SN",  zeta = 2.5)
hist(y, prob = TRUE, breaks = 15, main = "", las = 1, xlab = "y", ylim = c(0, 4.5), ylab = "Densidade")
curve(dPL(x, mu, sigma, lambda, family = "SN",  zeta = 2.5),
from = 0.01, to = 0.8, add = TRUE, col = "red")
rug(y)
mu = 0.3; sigma = 1; lambda = 2
x = seq(0.01, 0.9,0.01)
y = dPL(x, mu, sigma, lambda, family = "Hyp",  zeta = 2)
plot(x, y, type = "l", lwd = 2, las = 1, ylab = expression(f(y)), xlab = "y")
x1 = seq(0.01, 0.4, 0.01)
y1 = dPL(x1, mu, sigma, lambda, family = "Hyp",  zeta = 2)
polygon(c(x1, 0.4, 0), c(y1, 0, 0), col = "lightblue")
text(mu-0.025, 1, paste("P(Y<0.4) = ", round(pPL(0.4, mu, sigma, lambda, family = "Hyp",  zeta = 2),2)),
font = 1, cex = 0.6)
plot(x, y, type = "l", lwd = 2, las = 1, ylab = expression(f(y)), xlab = "y", axis = 3)
plot(x, y, type = "l", lwd = 2, las = 1, ylab = expression(f(y)), xlab = "y", axes = 3)
mu = 0.3; sigma = 1; lambda = 2
x = seq(0.01, 0.9,0.01)
y = dPL(x, mu, sigma, lambda, family = "Hyp",  zeta = 2)
plot(x, y, type = "l", lwd = 2, las = 1, ylab = expression(f(y)), xlab = "y", axes = 3)
mu = 0.3; sigma = 1; lambda = 2
x = seq(0.01, 0.9,0.01)
y = dPL(x, mu, sigma, lambda, family = "Hyp",  zeta = 2)
plot(x, y, type = "l", lwd = 2, las = 1, ylab = expression(f(y)), xlab = "y")
x1 = seq(0.01, 0.4, 0.01)
y1 = dPL(x1, mu, sigma, lambda, family = "Hyp",  zeta = 2)
polygon(c(x1, 0.4, 0), c(y1, 0, 0), col = "lightblue")
text(mu-0.025, 1, paste("P(Y<0.4) = ", round(pPL(0.4, mu, sigma, lambda, family = "Hyp",  zeta = 2),2)),
font = 1, cex = 0.6)
mu = 0.3; sigma = 1; lambda = 2
x = seq(0.01, 0.9,0.01)
y = dPL(x, mu, sigma, lambda, family = "Hyp",  zeta = 2)
plot(x, y, type = "l", lwd = 2, las = 1, ylab = expression(f(y)), xlab = "y")
x1 = seq(0.01, 0.4, 0.01)
y1 = dPL(x1, mu, sigma, lambda, family = "Hyp",  zeta = 2)
polygon(c(x1, 0.4, 0), c(y1, 0, 0), col = "lightblue")
text(mu-0.025, 1, paste("P(Y<0.4) = ", round(pPL(0.4, mu, sigma, lambda, family = "Hyp",  zeta = 2),2)),
font = 1, cex = 0.6)
mu = 0.3; sigma = 1; lambda = 2
x = seq(0.01, 0.9,0.01)
plot(x, pPL(x, mu, sigma, lambda, family = "PE",  zeta = 1.3),
type = "l", las = 1, lwd = 2, ylab = expression(P(Y<y)), xlab = "y")
p = pPL(0.5, mu, sigma, lambda, family = "PE",  zeta = 1.3)
q = qPL(p, mu, sigma, lambda, family = "PE",  zeta = 1.3)
points(q, p, pch = 16, col = 2, cex = 1.5)
text(0.55, 0.83, paste("(", 0.5, ",", round(p, 2), ")"), font = 2,
cex = 0.8, col = "red")
?PLreg
devtools::load_all()
devtools::load_all()
?summary.PLreg
?print
?PLreg
data("bodyfat_Aeolus")
#Initial model with zeta = 2
fit1 <- PLreg(percent.fat ~ days + sex + year, data = bodyfat_Aeolus,
family = "PE", zeta = 2)
coef(fit1)
?summary.PLreg
AIC(fit1)
summary(fit1)
?summary.PLreg
class(fit)
class(fit1)
class(PLreg)
devtools::load_all()
?PLreg
?bodyfat_Ae
help("bodyfat_Aeolus")
help("Firm")
help("PeruVotes")
devtools::load_all()
# Fitting power logit normal distribution
fitPL_NO <- PLreg(percent.fat ~ 1, data = bodyfat_Aeolus, family = "NO")
# Fitting power logit power exponential distribution
fitPL_PE.aux <- PLreg(percent.fat ~ 1, data = bodyfat_Aeolus, family = "PE", zeta = 3)
# extra.parameter(fitPL_PE.aux, lower = 1, upper = 4) #choose zeta = 3.33
fitPL_PE <- PLreg(percent.fat ~ 1, data = bodyfat_Aeolus, family = "PE", zeta = 3.33)
# Fitting power logit sinh-normal distribution
fitPL_SN.aux <- PLreg(percent.fat ~ 1, data = bodyfat_Aeolus, family = "SN", zeta = 1)
# extra.parameter(fitPL_SN.aux, lower = 1, upper = 4) #choose zeta = 1.67
fitPL_SN <- PLreg(percent.fat ~ 1, data = bodyfat_Aeolus, family = "SN", zeta = 1.67)
# Fitting power logit normal distribution
fitPL_NO <- PLreg(percent.fat ~ 1, data = bodyfat_Aeolus, family = "NO")
# Fitting power logit power exponential distribution
fitPL_PE.aux <- PLreg(percent.fat ~ 1, data = bodyfat_Aeolus, family = "PE", zeta = 3)
extra.parameter(fitPL_PE.aux, lower = 1, upper = 4) #choose zeta = 3.33
extra.parameter(fitPL_PE.aux, lower = 1, upper = 6)
extra.parameter(fitPL_PE.aux, lower = 1, upper = 6.5)
PL_NO <- round(c(fitPL_NO$Upsilon.zeta, AIC(fitPL_NO), BIC(fitPL_NO)), 3)
PL_PE <- round(c(fitPL_PE$Upsilon.zeta, AIC(fitPL_PE), BIC(fitPL_PE)), 3)
PL_SN <- round(c(fitPL_SN$Upsilon.zeta, AIC(fitPL_SN), BIC(fitPL_SN)), 3)
measures <- rbind(PL_NO, PL_PE, PL_SN)
colnames(measures) <- c("Upsilon", "AIC", "BIC")
measures
summary(fitPL_SN)
measures
summary(fitPL_SN)
fitted.values(fitPL_SN)
?fitted.values
hist(bodyfat_Aeolus$percent.fat, prob = TRUE, main = "", xlab = "y", ylim = c(0, 10))
hist(bodyfat_Aeolus$percent.fat, prob = TRUE, main = "", xlab = "y", ylim = c(0, 10),
ylab = densidade)
hist(bodyfat_Aeolus$percent.fat, prob = TRUE, main = "", xlab = "y", ylim = c(0, 10),
ylab = "Densidade")
curve(dPL(x, mu = fitPL_SN$fitted.values[1],
sigma = exp(fitPL_SN$coefficients$dispersion),
lambda = fitPL_SN$coefficients$skewness,
zeta = fitPL_SN$zeta, family = fitPL_SN$family),
from = 0.001, to = 0.4, add = TRUE, col = "red")
hist(bodyfat_Aeolus$percent.fat, prob = TRUE, main = "", xlab = "y", ylim = c(0, 10),
ylab = "Densidade", las = 1)
curve(dPL(x, mu = fitPL_SN$fitted.values[1],
sigma = exp(fitPL_SN$coefficients$dispersion),
lambda = fitPL_SN$coefficients$skewness,
zeta = fitPL_SN$zeta, family = fitPL_SN$family),
from = 0.001, to = 0.4, add = TRUE, col = "red")
devtools::load_all()
fitPL_PE <- PLreg(percent.fat ~ days + sex + year, data = bodyfat_Aeolus,
family = "PE", zeta = 1.7)
summary(fitPL_PE)
fitPL_PE_start <- PLreg(percent.fat ~ days + sex + year, data = bodyfat_Aeolus,
family = "PE", zeta = 2)
extra.parameter(fitPL_PE_start, lower = 1, upper = 2.5)
fitPL_PE <- PLreg(percent.fat ~ days + sex + year, data = bodyfat_Aeolus,
family = "PE", zeta = 1.67)
summary(fitPL_PE)
fitPL_PE2 <- PLreg(percent.fat ~ days + sex + year, data = bodyfat_Aeolus,
family = "PE", zeta = 1.67)
summary(fitPL_PE2)
summary(fitPL_PE2)
par(mfrow = c(2, 2))
plot(fitPL_PE2, which = 1:4)
?plot.PLreg
fitPL_PE2
devtools::load_all()
fitPL_slash <- PLreg(FIRMCOST ~ SIZELOG + INDCOST, data = Firm,
family = "SLASH", zeta = 2)
extra.parameter(fitPL_slash, 1, 3)
fitPL_slash <- PLreg(FIRMCOST ~ SIZELOG + INDCOST, data = Firm,
family = "SLASH", zeta = 2.33)
summary(fitPL_slash)
?PLreg
fitPL_slash2 <- PLreg(FIRMCOST ~ SIZELOG + INDCOST, data = Firm,
family = "SLASH", zeta = 2.33, type = "ML")
fitPL_slash2
summary(fitPL_slash2)
fitPL_slash <- PLreg(FIRMCOST ~ SIZELOG + INDCOST, data = Firm,
family = "SLASH", zeta = 2.33)
fitPL_slash
set.seed(234)
envelope(fitPL_slash, type = "standardized")
plot(fitPL_slash, which = 7)
identify(residuals(fitPL_slash, type = "standardized"), fitPL_slash$v)
devtools::load_all()
fitloglog_PE <- PLreg(percent.fat ~ days + sex + year, data = bodyfat_Aeolus,
family = "PE", zeta = 1.7, control = PLreg.control(lambda = 0))
summary(fitloglog_PE)
summary(fitloglog_PE)
fitloglog_PE <- PLreg(percent.fat ~ days + sex + year, data = bodyfat_Aeolus,
family = "PE", zeta = 1.67, control = PLreg.control(lambda = 0))
summary(fitloglog_PE)
fitloglog_PE <- PLreg(percent.fat ~ days + sex + year, data = bodyfat_Aeolus,
family = "PE", zeta = 1.67, control = PLreg.control(lambda = 0))
summary(fitloglog_PE)
par(mfrow = c(2, 2))
plot(fitloglog_PE, which = 1:4)
par(mfrow = c(1, 2))
plot(fitloglog_PE, which = 1:2)
par(mfrow = c(3, 3))
plot(fitloglog_PE, which = 1:6)
par(mfrow = c(3, 2))
plot(fitloglog_PE, which = 1:6)
par(mfrow = c(3, 3))
plot(fitloglog_PE, which = 1:7)
?residuals.PLreg
influence(fitloglog_PE)
influence_measures = influence(fitloglog_PE, graph = TRUE)
par(mfrow = c(1,3))
influence_measures = influence(fitloglog_PE, graph = TRUE)
plot(influence_measures$case.weights, type = "h", ylim = c(0,1), ylab = "Case weights")
par(mfrow = c(1,3))
influence_measures = influence(fitloglog_PE, graph = TRUE)
influence(fitloglog_PE, graph = TRUE)
influence(fitloglog_PE, graph = TRUE)
?influence
fitPL4 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 4))
fitPL4
fitPL4 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5)
fitPL4
fitPL4 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 4))
# GJS Student-t regression model
fitPL1 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 1))
fitPL05 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 0.5))
# log-log Student-t regression model
fitPL0 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 0))
summary(fitPL1)
devtools::load_all()
fitPL4 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 4))
# GJS Student-t regression model
fitPL1 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 1))
fitPL05 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 0.5))
# log-log Student-t regression model
fitPL0 <- PLreg(votes ~ HDI | HDI, data = PeruVotes, family = "TF", zeta = 5,
control = PLreg.control(lambda = 0))
envelope(fitPL4)
envelope(fitPL4, type = "standardized")
envelope(fitPL1, type = "standardized")
envelope(fitPL05, type = "standardized")
envelope(fitPL0, type = "standardized")
?glm
?residuals.glm
devtools::load_all()
devtools::build_manual()
devtools::load_all()
devtools::document()
devtools::build_manual()
devtools::load_all()
devtools::document()
help("boodyfat_Aeolus")
help("bodyfat_Aeolus")
devtools::document()
?envelope
devtools::load_all()
devtools::document()
?extra.parameter
devtools::load_all()
devtools::document()
?extra.parameter
devtools::load_all()
devtools::document()
?extra.parameter
devtools::load_all()
devtools::document()
?Firm
devtools::load_all()
devtools::load_all()
devtools::document()
?extra.parameter
devtools::document()
?influence
devtools::load_all()
devtools::check()
# Checagem adicional
rhub::check_for_cran()
# erros de ortografia
devtools::spell_check()
#Boas práticas
goodpractice::gp()
devtools::load_all()
devtools::document()
?PLreg
devtools::load_all()
devtools::document()
?PLreg
devtools::load_all()
devtools::document()
?PLreg
?residuals
?residuals.PLreg
?influence.PLreg
?influence
?Firm
devtools::build_manual()
?use_gpl_license
## License
usethis::use_gpl_license()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
devtools::build_manual()
file.exists("~/.ssh/id_rsa.pub")
Authors@R: c(
person("Felipe", "Queiroz", email = "ffelipeq@outlook.com", role = c("aut", "cre")),
person("Silvia", "Ferrari", email = "silviaferrari@usp.br", role = "aut"))
authors@R: c(
person("Felipe", "Queiroz", email = "ffelipeq@outlook.com", role = c("aut", "cre")),
person("Silvia", "Ferrari", email = "silviaferrari@usp.br", role = "aut"))
devtools::load_all()
devtools::document()
?PLreg
usethis::Authors@R: c(
person("Felipe", "Queiroz", email = "ffelipeq@outlook.com", role = c("aut", "cre")),
person("Silvia", "Ferrari", email = "silviaferrari@usp.br", role = "aut"))
devtools::Authors@R: c(
person("Felipe", "Queiroz", email = "ffelipeq@outlook.com", role = c("aut", "cre")),
person("Silvia", "Ferrari", email = "silviaferrari@usp.br", role = "aut"))
Authors@R: c(
person("Felipe", "Queiroz", email = "ffelipeq@outlook.com", role = c("aut", "cre")),
person("Silvia", "Ferrari", email = "silviaferrari@usp.br", role = "aut"))
options(
usethis.description = list(
Authors@R: c(
person("Felipe", "Queiroz", email = "ffelipeq@outlook.com", role = c("aut", "cre")),
person("Silvia", "Ferrari", email = "silviaferrari@usp.br", role = "aut"))
)
)
usethis::options(
usethis.description = list(
Authors@R: c(
person("Felipe", "Queiroz", email = "ffelipeq@outlook.com", role = c("aut", "cre")),
person("Silvia", "Ferrari", email = "silviaferrari@usp.br", role = "aut"))
)
)
getOption("usethis.description")
Authors@R: c(
person("Felipe", "Queiroz", email = "ffelipeq@outlook.com", role = c("aut", "cre")),
person("Silvia", "Ferrari", email = "silviaferrari@usp.br", role = "aut"))
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::check()
